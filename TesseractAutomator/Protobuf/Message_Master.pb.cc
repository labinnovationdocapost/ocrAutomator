// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message_Master.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Message_Master.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Docapost {
namespace IA {
namespace Tesseract {
namespace Proto {

namespace {

const ::google::protobuf::Descriptor* Message_Master_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_Master_reflection_ = NULL;
struct Message_MasterOneofInstance {
  const ::Docapost::IA::Tesseract::Proto::Synchro_Master* synchro_;
  const ::Docapost::IA::Tesseract::Proto::Status* status_;
}* Message_Master_default_oneof_instance_ = NULL;

}  // namespace


void protobuf_AssignDesc_Message_5fMaster_2eproto() {
  protobuf_AddDesc_Message_5fMaster_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Message_Master.proto");
  GOOGLE_CHECK(file != NULL);
  Message_Master_descriptor_ = file->message_type(0);
  static const int Message_Master_offsets_[3] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Message_Master_default_oneof_instance_, synchro_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Message_Master_default_oneof_instance_, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Master, message_),
  };
  Message_Master_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Message_Master_descriptor_,
      Message_Master::default_instance_,
      Message_Master_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Master, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Master, _unknown_fields_),
      -1,
      Message_Master_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Master, _oneof_case_[0]),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Message_Master));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Message_5fMaster_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Message_Master_descriptor_, &Message_Master::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Message_5fMaster_2eproto() {
  delete Message_Master::default_instance_;
  delete Message_Master_default_oneof_instance_;
  delete Message_Master_reflection_;
}

void protobuf_AddDesc_Message_5fMaster_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::Docapost::IA::Tesseract::Proto::protobuf_AddDesc_Synchro_5fMaster_2eproto();
  ::Docapost::IA::Tesseract::Proto::protobuf_AddDesc_Status_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024Message_Master.proto\022\033Docapost.IA.Tess"
    "eract.Proto\032\024Synchro_Master.proto\032\014Statu"
    "s.proto\"\222\001\n\016Message_Master\022>\n\007synchro\030\001 "
    "\001(\0132+.Docapost.IA.Tesseract.Proto.Synchr"
    "o_MasterH\000\0225\n\006status\030\002 \001(\0132#.Docapost.IA"
    ".Tesseract.Proto.StatusH\000B\t\n\007message", 236);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Message_Master.proto", &protobuf_RegisterTypes);
  Message_Master::default_instance_ = new Message_Master();
  Message_Master_default_oneof_instance_ = new Message_MasterOneofInstance;
  Message_Master::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Message_5fMaster_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Message_5fMaster_2eproto {
  StaticDescriptorInitializer_Message_5fMaster_2eproto() {
    protobuf_AddDesc_Message_5fMaster_2eproto();
  }
} static_descriptor_initializer_Message_5fMaster_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Message_Master::kSynchroFieldNumber;
const int Message_Master::kStatusFieldNumber;
#endif  // !_MSC_VER

Message_Master::Message_Master()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Docapost.IA.Tesseract.Proto.Message_Master)
}

void Message_Master::InitAsDefaultInstance() {
  Message_Master_default_oneof_instance_->synchro_ = const_cast< ::Docapost::IA::Tesseract::Proto::Synchro_Master*>(&::Docapost::IA::Tesseract::Proto::Synchro_Master::default_instance());
  Message_Master_default_oneof_instance_->status_ = const_cast< ::Docapost::IA::Tesseract::Proto::Status*>(&::Docapost::IA::Tesseract::Proto::Status::default_instance());
}

Message_Master::Message_Master(const Message_Master& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Docapost.IA.Tesseract.Proto.Message_Master)
}

void Message_Master::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_message();
}

Message_Master::~Message_Master() {
  // @@protoc_insertion_point(destructor:Docapost.IA.Tesseract.Proto.Message_Master)
  SharedDtor();
}

void Message_Master::SharedDtor() {
  if (has_message()) {
    clear_message();
  }
  if (this != default_instance_) {
  }
}

void Message_Master::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_Master::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_Master_descriptor_;
}

const Message_Master& Message_Master::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_5fMaster_2eproto();
  return *default_instance_;
}

Message_Master* Message_Master::default_instance_ = NULL;

Message_Master* Message_Master::New() const {
  return new Message_Master;
}

void Message_Master::clear_message() {
  switch(message_case()) {
    case kSynchro: {
      delete message_.synchro_;
      break;
    }
    case kStatus: {
      delete message_.status_;
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void Message_Master::Clear() {
  clear_message();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Message_Master::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Docapost.IA.Tesseract.Proto.Message_Master)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Docapost.IA.Tesseract.Proto.Synchro_Master synchro = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_synchro()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_status;
        break;
      }

      // optional .Docapost.IA.Tesseract.Proto.Status status = 2;
      case 2: {
        if (tag == 18) {
         parse_status:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Docapost.IA.Tesseract.Proto.Message_Master)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Docapost.IA.Tesseract.Proto.Message_Master)
  return false;
#undef DO_
}

void Message_Master::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Docapost.IA.Tesseract.Proto.Message_Master)
  // optional .Docapost.IA.Tesseract.Proto.Synchro_Master synchro = 1;
  if (has_synchro()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->synchro(), output);
  }

  // optional .Docapost.IA.Tesseract.Proto.Status status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Docapost.IA.Tesseract.Proto.Message_Master)
}

::google::protobuf::uint8* Message_Master::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Docapost.IA.Tesseract.Proto.Message_Master)
  // optional .Docapost.IA.Tesseract.Proto.Synchro_Master synchro = 1;
  if (has_synchro()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->synchro(), target);
  }

  // optional .Docapost.IA.Tesseract.Proto.Status status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Docapost.IA.Tesseract.Proto.Message_Master)
  return target;
}

int Message_Master::ByteSize() const {
  int total_size = 0;

  switch (message_case()) {
    // optional .Docapost.IA.Tesseract.Proto.Synchro_Master synchro = 1;
    case kSynchro: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->synchro());
      break;
    }
    // optional .Docapost.IA.Tesseract.Proto.Status status = 2;
    case kStatus: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->status());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_Master::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Message_Master* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Message_Master*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Message_Master::MergeFrom(const Message_Master& from) {
  GOOGLE_CHECK_NE(&from, this);
  switch (from.message_case()) {
    case kSynchro: {
      mutable_synchro()->::Docapost::IA::Tesseract::Proto::Synchro_Master::MergeFrom(from.synchro());
      break;
    }
    case kStatus: {
      mutable_status()->::Docapost::IA::Tesseract::Proto::Status::MergeFrom(from.status());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Message_Master::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Master::CopyFrom(const Message_Master& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Master::IsInitialized() const {

  if (has_synchro()) {
    if (!this->synchro().IsInitialized()) return false;
  }
  if (has_status()) {
    if (!this->status().IsInitialized()) return false;
  }
  return true;
}

void Message_Master::Swap(Message_Master* other) {
  if (other != this) {
    std::swap(message_, other->message_);
    std::swap(_oneof_case_[0], other->_oneof_case_[0]);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Message_Master::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_Master_descriptor_;
  metadata.reflection = Message_Master_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto
}  // namespace Tesseract
}  // namespace IA
}  // namespace Docapost

// @@protoc_insertion_point(global_scope)
