// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Synchro_Master.proto

#ifndef PROTOBUF_Synchro_5fMaster_2eproto__INCLUDED
#define PROTOBUF_Synchro_5fMaster_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "File.pb.h"
// @@protoc_insertion_point(includes)

namespace Docapost {
namespace IA {
namespace Tesseract {
namespace Proto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Synchro_5fMaster_2eproto();
void protobuf_AssignDesc_Synchro_5fMaster_2eproto();
void protobuf_ShutdownFile_Synchro_5fMaster_2eproto();

class Synchro_Master;

// ===================================================================

class Synchro_Master : public ::google::protobuf::Message {
 public:
  Synchro_Master();
  virtual ~Synchro_Master();

  Synchro_Master(const Synchro_Master& from);

  inline Synchro_Master& operator=(const Synchro_Master& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Synchro_Master& default_instance();

  void Swap(Synchro_Master* other);

  // implements Message ----------------------------------------------

  Synchro_Master* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Synchro_Master& from);
  void MergeFrom(const Synchro_Master& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 TotalThread = 1;
  inline bool has_totalthread() const;
  inline void clear_totalthread();
  static const int kTotalThreadFieldNumber = 1;
  inline ::google::protobuf::int32 totalthread() const;
  inline void set_totalthread(::google::protobuf::int32 value);

  // required int32 done = 2;
  inline bool has_done() const;
  inline void clear_done();
  static const int kDoneFieldNumber = 2;
  inline ::google::protobuf::int32 done() const;
  inline void set_done(::google::protobuf::int32 value);

  // repeated .Docapost.IA.Tesseract.Proto.File Data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline const ::Docapost::IA::Tesseract::Proto::File& data(int index) const;
  inline ::Docapost::IA::Tesseract::Proto::File* mutable_data(int index);
  inline ::Docapost::IA::Tesseract::Proto::File* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::Docapost::IA::Tesseract::Proto::File >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::Docapost::IA::Tesseract::Proto::File >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:Docapost.IA.Tesseract.Proto.Synchro_Master)
 private:
  inline void set_has_totalthread();
  inline void clear_has_totalthread();
  inline void set_has_done();
  inline void clear_has_done();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 totalthread_;
  ::google::protobuf::int32 done_;
  ::google::protobuf::RepeatedPtrField< ::Docapost::IA::Tesseract::Proto::File > data_;
  friend void  protobuf_AddDesc_Synchro_5fMaster_2eproto();
  friend void protobuf_AssignDesc_Synchro_5fMaster_2eproto();
  friend void protobuf_ShutdownFile_Synchro_5fMaster_2eproto();

  void InitAsDefaultInstance();
  static Synchro_Master* default_instance_;
};
// ===================================================================


// ===================================================================

// Synchro_Master

// required int32 TotalThread = 1;
inline bool Synchro_Master::has_totalthread() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Synchro_Master::set_has_totalthread() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Synchro_Master::clear_has_totalthread() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Synchro_Master::clear_totalthread() {
  totalthread_ = 0;
  clear_has_totalthread();
}
inline ::google::protobuf::int32 Synchro_Master::totalthread() const {
  // @@protoc_insertion_point(field_get:Docapost.IA.Tesseract.Proto.Synchro_Master.TotalThread)
  return totalthread_;
}
inline void Synchro_Master::set_totalthread(::google::protobuf::int32 value) {
  set_has_totalthread();
  totalthread_ = value;
  // @@protoc_insertion_point(field_set:Docapost.IA.Tesseract.Proto.Synchro_Master.TotalThread)
}

// required int32 done = 2;
inline bool Synchro_Master::has_done() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Synchro_Master::set_has_done() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Synchro_Master::clear_has_done() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Synchro_Master::clear_done() {
  done_ = 0;
  clear_has_done();
}
inline ::google::protobuf::int32 Synchro_Master::done() const {
  // @@protoc_insertion_point(field_get:Docapost.IA.Tesseract.Proto.Synchro_Master.done)
  return done_;
}
inline void Synchro_Master::set_done(::google::protobuf::int32 value) {
  set_has_done();
  done_ = value;
  // @@protoc_insertion_point(field_set:Docapost.IA.Tesseract.Proto.Synchro_Master.done)
}

// repeated .Docapost.IA.Tesseract.Proto.File Data = 3;
inline int Synchro_Master::data_size() const {
  return data_.size();
}
inline void Synchro_Master::clear_data() {
  data_.Clear();
}
inline const ::Docapost::IA::Tesseract::Proto::File& Synchro_Master::data(int index) const {
  // @@protoc_insertion_point(field_get:Docapost.IA.Tesseract.Proto.Synchro_Master.Data)
  return data_.Get(index);
}
inline ::Docapost::IA::Tesseract::Proto::File* Synchro_Master::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:Docapost.IA.Tesseract.Proto.Synchro_Master.Data)
  return data_.Mutable(index);
}
inline ::Docapost::IA::Tesseract::Proto::File* Synchro_Master::add_data() {
  // @@protoc_insertion_point(field_add:Docapost.IA.Tesseract.Proto.Synchro_Master.Data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Docapost::IA::Tesseract::Proto::File >&
Synchro_Master::data() const {
  // @@protoc_insertion_point(field_list:Docapost.IA.Tesseract.Proto.Synchro_Master.Data)
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::Docapost::IA::Tesseract::Proto::File >*
Synchro_Master::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:Docapost.IA.Tesseract.Proto.Synchro_Master.Data)
  return &data_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Proto
}  // namespace Tesseract
}  // namespace IA
}  // namespace Docapost

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Synchro_5fMaster_2eproto__INCLUDED
